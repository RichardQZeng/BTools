[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "BERATools"
dynamic = ["version"]
description = "An advanced forest line feature analysis platform"
requires-python = ">=3.9"
readme = "README.md"
license = {file = "LICENSE"}
authors = [
    { name = "AppliedGRG", email = "appliedgrg@gmail.com" },
    { name = "Richard Zeng", email = "richardqzeng@gmail.com" },
]

keywords = [
    "BERA", "Line"
]

classifiers = [
    "Development Status :: 2 - Pre-Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Natural Language :: English",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

dependencies = [
    "dask",
    "distributed",
    "bera_centerlines",
    "geopandas",
    "pip",
    "pyogrio>=0.9.0",
    "psutil",
    "PyQt5",
    "pyqtlet2",
    "rioxarray",
    "rpy2",
    "scikit-image>=0.24.0",
    "xarray-spatial"
]

[project.scripts]
BERATools = "beratools.gui:gui_main"

[project.urls]
Homepage = "https://github.com/RichardQZeng/BTools"

[tool.hatch.version]
path = "beratools/__init__.py"

[tool.hatch.build.targets.sdist]
include = [
    "/beratools",
]

exclude = [
  "tests/*",
]

# ruff settings
[tool.ruff]

# Set maximum line length to 88 characters as per PEP 8
line-length = 88

# Select categories of checks to perform
select = ["E", "F", "D"]

# Ignore specific error codes
ignore = ["W505", "D102", "E203", "D212", "D103", "D107", "D417", "E301", "E302", "E303", "W292", "W391"]

# Exclude certain directories from linting (e.g., test and build directories)
exclude = [
    "dist/*",        # Ignore the build directory
    "docs/*",         # Ignore documentation
    "output/*",     # Ignore example code
    "*/__init__.py"   # Ignore init files, typically they are left empty
]


# Target Python version
target-version = "py39"